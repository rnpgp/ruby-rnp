# Copyright (c) 2023 Ribose Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

name: test-and-release

on:
  repository_dispatch:
  pull_request:
  push:
    branches: [ main ]
    tags: [ v* ]
  workflow_dispatch:
    inputs:
      tag:
        descritption: 'rnp version to test'
        type: 'string'

concurrency:
  group: '${{ github.workflow }}-${{ github.job }}-${{ github.head_ref || github.ref_name }}'
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
      coverage: ${{ steps.matrix.outputs.coverage }}
    steps:
    - name: Setup test matrix
      id: matrix
      run: |
        if [ "${{ github.event.inputs.tag }}" != "" ]; then
          echo "matrix=[ '${{ github.event.inputs.tag }}' ]" >> $GITHUB_OUTPUT;
          echo "coverage=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT;
        else
          echo "matrix=[ 'v0.15.2', 'v0.16.2', 'master' ]" >> $GITHUB_OUTPUT;
          echo "coverage=master" >> $GITHUB_OUTPUT;
        fi

  build-and-test:
    needs: prepare
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest', 'macos-latest' ]
        ruby: [ '2.7', '3.0', '3.1', '3.2', 'head' ]
        rnp: ${{ fromJson(needs.prepare.outputs.matrix) }}
        env: [ { COVERAGE: false } ]
        include:
        - os: 'ubuntu-latest'
          ruby: '3.2'
          rnp: ${{ needs.prepare.outputs.coverage }}
          env: { COVERAGE: 'true' }

    runs-on: ${{ matrix.os }}
    env: ${{ matrix.env }}
    steps:
    - name: Install packages Ubuntu
      if: matrix.os == 'ubuntu-latest'
#     Already installed on GHA: build-essential libbz2-dev zlib1g-dev
      run: sudo apt-get install cmake libbotan-2-dev libjson-c-dev

    - name: Install packages MacOS
      if: matrix.os == 'macos-latest'
#     Already installed on GHA: cmake make
      run: brew install botan json-c

    - name: Checkout rnp
      uses: actions/checkout@v3
      with:
        repository: rnpgp/rnp
        path: rnp
        submodules: true
        ref: ${{ matrix.rnp }}

    - name: Configure rnp
      run:  cmake -B rnp/build -DBUILD_TESTING=OFF -DENABLE_DOC=OFF -DDOWNLOAD_SEXP=ON -DBUILD_SHARED_LIBS=ON rnp

    - name: Build rnp
      run:  cmake --build rnp/build

    - name: Install rnp
      run:  sudo cmake --install rnp/build

    - name: Checkout ruby-rnp
      uses: actions/checkout@v3

    - name: Setup Ruby and bundle
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true

    - name: Test
      run: bundle exec rake

  package-and-release:
    runs-on: ubuntu-latest
    if: contains(github.ref, 'refs/tags/v')
    needs: build-and-test
    steps:
    - name: Install packages Ubuntu
#     Already installed on GHA: build-essential libbz2-dev zlib1g-dev
      run: sudo apt-get install cmake libbotan-2-dev libjson-c-dev

    - name: Checkout rnp
      uses: actions/checkout@v3
      with:
        repository: rnpgp/rnp
        path: rnp
        ref: master
        submodules: true

    - name: Configure rnp
      run:  cmake -B rnp/build -DBUILD_TESTING=OFF -DENABLE_DOC=OFF -DDOWNLOAD_SEXP=ON -DBUILD_SHARED_LIBS=ON rnp

    - name: Build rnp
      run:  cmake --build rnp/build

    - name: Install rnp
      run:  sudo cmake --install rnp/build

    - name: Checkout ruby-rnp
      uses: actions/checkout@v3

    - name: Setup Ruby and bundle
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true

    - name: Package
      run: bundle exec rake build

    - name: Publish to rubygems.org
      env:
        RUBYGEMS_API_KEY: ${{secrets.RNP_RUBYGEMS_API_KEY}}
      run: |
        mkdir -p ~/.gem
        touch ~/.gem/credentials
        cat > ~/.gem/credentials << EOF
        ---
        :rubygems_api_key: ${RUBYGEMS_API_KEY}
        EOF
        chmod 0600 ~/.gem/credentials
        gem signin
        for gem in pkg/*.gem; do gem push -V $gem; done
